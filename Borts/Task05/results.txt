---------------------------------------------------------------------------------------------
|/\-\/-/\-\/|	5	|	10	|  100	|	1K	|	10K	|  100K	|  1M	|	 10M	|   100M	|
---------------------------------------------------------------------------------------------
|  BUBBLE	|	0	|	0	|	0	|	0	|	0	|	32	|  N/A	|	 N/A	|	 N/A	|
---------------------------------------------------------------------------------------------
| INSERTION	|	0	|	0	|	0	|	0	|	0	|	9	|  N/A	|	 N/A	|	 N/A	|
---------------------------------------------------------------------------------------------
|   MERGE	|	0	|	0	|	0	|	0	|	0	|	0	|	0	|	  3		|	 41		|
---------------------------------------------------------------------------------------------
|   QUICK	|	0	|	0	|	0	|	0	|	0	|	0	|	0	|	  3		|	 54		|
---------------------------------------------------------------------------------------------
|   RADIX	|	0	|	0	|	0	|	0	|	0	|	0	|	0	|   9 +- 2	|	 267	|
---------------------------------------------------------------------------------------------

Замеры проводились при помощи заголовочного файла <time.h> и функции clock() на строках,
    состоящих из случайно сгенерированных чисел от 0 до 999 999 999 999 .
Уникальность чисел в файле 20.000шт, затем они повторялись блоками по 20.000.
Замеры и расчёты проводились с использованием знаний про постановку экспериментов.
Для количества строк 5-10К проводилось 100 прогонов.
Для количества строк 100К-10М проводилось по 25 прогонов.
Для количества строк 100М для Merge/Quick проводилось 10 прогонов, для Radix 5 прогонов.
В данном эксперименте значащая погрешность была выявлена только у Radix на 10М строк,
    в других случаях она отбрасывалась из-за несоответствия точности изначальным результатам (< 1).
Результаты представлены в секундах, эксперимент проводился на ОС Ubuntu 18, во время замеров
    прочие программы были закрыты, чтобы не происходило искажения результатов.
Программа для замеров компилировалась только с флагом -O3
Во время написания и доработок компилировалась с флагами
    -Wall -Wextra -Wpedantic -std=c99 -Werror -Wno-error=sign-compare
        -fsanitize=address -fsanitize=undefined -O3 -flto -g
    и проводилась отладка при помощи Valgrind/memcheck  

В ходе эксперимента, при данной точности измерений, различий при сортировке до 10К строк
    у алгоритмов выявлено не было, однако, начиная с 100К строк алгоритмы BUBBLE и INSERTION
    начали проявлять свою медлительность в сравнении с другими. В следствие не трудных
    математических расчётов было принято решение вычеркнуть их из дальнейших тестов, так как
    время одной итерации превышало бы ~15 минут. Radix также показал себя не с лучшей стороны
    предположительно, длительная работа вызвана большим количеством выделений дополнительной памяти.
    Алгоритмы Quick и Merge достойно одержали победу над своими соперниками  

ВНИМАНИЕ! На объективность тестов и оптимизированность написанных алгоритмов не претендую!
    Все тесты носят исключительно приблизительно-ознакомительный характер
        и не могут восприниматься как абсолютная истина!