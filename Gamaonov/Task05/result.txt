
           5      10    100   1K     10K    100K    1M     10M    100M

bubble     0.00   0.00  0.00  0.00   1.08   121.23  n/a    n/a    n/a

insertion  0.00   0.00  0.00  0.00   0.62   51.41   n/a    n/a    n/a

merge      0.00   0.00  0.00  0.00   0.00   0.02    2.91   63.21  Killed

quick      0.00   0.00  0.00  0.00   0.00   0.01    1.57   27.82  245.58

heap       0.00   0.00  0.00  0.00   0.00   0.03    2.02   29.26  460.45

========================================================================

Условия:
Опыт проводился на строках диной 10 символов (A-Z), случайно сгенерированых программой,
написанной на коленке за 15 минут.
------------------------------------------------------------------------
Выводы:
Во-первых я заметил, что мои результаты значительно отличаются от результатов одногруппников:
у меня ушло гораздо больш времени на сортировку. Не могу понять с чем это связано, рализация
сортировок плюс-минус одна и та же у всех, машина довольно мощная.

Как видно из таблицы, сортировки с квадратичной сложностью работают гораздо медленнее (в начале эксперимента я наивно надеялся дождаться конца сортировки пузырьком на 100М строк). При этом сортировка вставками работат примерно в два раза быстрее пузырька (но её я конца
я всё равно не дождался). Сортировка слиянием показала себя заметно лучше, чем две предыдущие, но
рзультата на 100М сторк я всё равно не получил, так как линукс оказался менее трпелив, чем я.
Быстрая сортировка и пирамидальная - фавориты.

Интересное наблюдение состоит в том, что определенные сортировки лучше работают на определенном 
размере входных данных. К примеру, пирамидальная сортировка, в целом, показала себя гораздо лучше сортировки слиянием, но на 100К строк merge отработал быстрее. Не смотря на то, что ассимптотическая сложность одинакова, размер константы тоже влияет на время выполнения

